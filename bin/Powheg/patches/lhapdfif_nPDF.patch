--- ../PowHeg/POWHEG-BOX/lhapdfif.f	2016-09-23 15:15:29.000000001 +0200
+++ POWHEG-BOX/lhapdfif.f	2017-06-10 21:31:17.000000001 +0200
@@ -139,19 +139,32 @@
       subroutine genericpdf(ndns,ih,xmu2,x,fx)
 c Interface to lhapdf package.
       implicit none
+      include 'pwhg_pdf.h'
+      integer ndns,ih,ia
+      real * 8 xmu2,x,fx(-pdf_nparton:pdf_nparton)
+      ia = 1 
+      call genericpdfa(ndns,ih,ia,xmu2,x,fx)
+      end
+
+      subroutine genericpdfa(ndns,ih,ia,xmu2,x,fx)
+      implicit none
       include 'nlegborn.h'
       include 'pwhg_pdf.h'
-      integer ndns,ih
+      integer ndns,ih,ia
       real * 8 xmu2,x,fx(-pdf_nparton:pdf_nparton)
       real * 8 fxlha(-6:6)
       integer j
-      real * 8 tmp
+      real * 8 tmp,A,Z
       real*8 photon
       call genericpdfset(ndns)
 
+
 c photon induced work only with MRST2004QED (ndns = 20460)
       if (ndns.eq.20460) then
           call evolvePDFphoton(x,sqrt(xmu2),fxlha,photon)
+      elseif (ia.eq.208) then
+          call evolvePDFhi(x,sqrt(xmu2),ia,fxlha)
+          photon=0d0
       else
           call evolvePDF(x,sqrt(xmu2),fxlha)
           photon=0d0
@@ -162,8 +175,18 @@
       if(pdf_nparton.ge.22) then
          fx(22)=photon/x
       endif
+      if(ia.eq.208) then
+c 208 is Lead ion (Suggested by Andre Stahl, 18/5/2017)
+        A=208.d0
+        Z=82.d0
+        tmp=fx(-2)
+        fx(-2)=fx(-2)*Z/A + fx(-1)*(A-Z)/A
+        fx(-1)=fx(-1)*Z/A + tmp*(A-Z)/A
+        tmp=fx(1)
+        fx(1)=fx(1)*Z/A + fx(2)*(A-Z)/A
+        fx(2)=fx(2)*Z/A + tmp*(A-Z)/A         
 c 1 is proton, -1 is antiproton, 3 is pi+, -3 is pi-
-      if(ih.eq.1) then
+      elseif(ih.eq.1) then
          return
       elseif(ih.eq.-1) then
          do j=1,6
@@ -222,3 +245,58 @@
       character * 3 whichpdfpk
       whichpdfpk='lha'
       end
+
+c evolve routine for EPPS16 nPDF
+      subroutine evolvePDFhi(x,Q,ia,f) 
+      implicit none 
+      integer nset,ia 
+      real*8 x,Q,f(-6:6)
+      nset = 1 
+      call evolvePDFhiM(nset,x,Q,ia,f) 
+      return
+      END
+    
+      subroutine evolvePDFhiM(nset,xin,Qin,ia,f) 
+      implicit none 
+      real*8 x,Q,f(-6:6) 
+      real*8 ruv,rdv,ru,rd,rs,rc,rb,rt,rg 
+      integer nset,iimem,j 
+      real*8 xin,qin,q2in,tmp 
+      character*20 lparm 
+      real*8 xmin,xmax,q2min,q2max 
+      integer iorder,ipset,ia
+      real * 8 powheginput
+      external powheginput
+
+c check range of x and Q. Freeze in boundaries of EPPS16
+      q2in = qin**2 
+      if(x.lt.0.0000001) write(*,*) "Warning: x<1E-7"
+      if(x.gt.1.d0) write(*,*) "Warning: x>1"
+      if(q2in.lt.1.69d0) write(*,*) "Warning: Q<1.3GeV"
+      if(q2in.gt.100000000.d0) write(*,*) "Warning: Q>10000GeV"
+      x = max(0.0000001,min(1.d0,xin)) 
+      q = sqrt(max(0d0,1.69d0,min(100000000.d0,q2in))) 
+
+      iorder=2 
+      ipset=powheginput('#nPDFerrSet')
+      if(ipset.lt.1) ipset=1
+      call epps16(iorder,ipset,ia,x,q,ruv,rdv,ru,rd,rs,rc,rb,rg)
+      rt = 1.0d0
+
+      call evolvePDFM(nset,x,Q,f)
+      f(0) = f(0)*rg
+      f(1) = f(1)*rdv-f(-1)*(rdv-rd)
+      f(2) = f(2)*ruv-f(-2)*(ruv-ru)
+      f(3) = f(3)*rs      
+      f(4) = f(4)*rc      
+      f(5) = f(5)*rb      
+      f(6) = f(6)*rt      
+      f(-6) = f(-6)*rt
+      f(-5) = f(-5)*rb
+      f(-4) = f(-4)*rc
+      f(-3) = f(-3)*rs
+      f(-2) = f(-2)*ru
+      f(-1) = f(-1)*rd
+
+      return
+      end
